//@Akshay Yadav

#include <bits/stdc++.h>
using namespace std;

int kadanes(int ar[], int n){
    int currentSum = 0, maxSum = INT_MIN;
    for(int i = 0 ; i < n ; i++){
        currentSum+=ar[i];
        if(currentSum < 0){
            currentSum = 0;
        }
        maxSum = max(maxSum, currentSum);
    }
    return maxSum;
}


int solve(int ar[], int n){
    int sum = 0, nonCirularSum = kadanes(ar, n), circularSum = 0;
    for(int i = 0 ; i < n ; i++){
      sum+=ar[i];
    }
    for(int i = 0 ; i < n ; i++){
        if(ar[i] < 0 || ar[i] > 0){
	//Reversing the signs of each elements 
            ar[i]= -ar[i];
        }
    }
    

//subtracting non contributing elements from sum of original array 
     circularSum = sum + kadanes(ar, n);
    
    return max(nonCirularSum, circularSum);
}

int main() {
    int n;
    cin >> n;
    int ar[n];
    for(int i = 0 ; i < n ; i++){
        cin >> ar[i];
    }
    
    cout << solve(ar,n);
    
    
   
	return 0;
}
